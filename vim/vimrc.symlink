" auto-install Plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent execute "!curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" includes
source ~/.vimrc_dev

Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'scrooloose/nerdcommenter'
"Plug 'ervandew/supertab'
Plug 'nanotech/jellybeans.vim'
Plug 'vim-airline/vim-airline'
Plug 'thaerkh/vim-indentguides'

call plug#end()


" essentials
filetype plugin indent on       " Enable file type support
set encoding=utf-8              " UTF-8 encoding
set binary                      " Enable binary support
set hidden                      " Hide buffers
set showcmd                     " Show current command
set showmode                    " Show current mode
set autoread                    " Auto reload
set ttyfast                     " Fast terminal
set ruler                       " Show ruler
set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)
set nofoldenable                " disable folding
set laststatus=2                " Alwasy display statusline
set listchars=tab:\┊\ ,trail:•
set cursorline                  " highlight the current line (slow via ssh)
set colorcolumn=80,120          " Show ruler columns

" Indentation
set smarttab                    " Better tabs
set smartindent                 " Inserts new level of indentation
set autoindent                  " Copy indentation from previous line
set tabstop=4                   " Columns a tab counts for
set softtabstop=4               " Columns a tab inserts in insert mode
set shiftwidth=4                " Columns inserted with the reindent operations
set shiftround                  " Always indent by multiple of shiftwidth
set expandtab                   " Always use spaces instead of tabs

" Line Numbers
set nu                          " Show line numbers
nnoremap <F4> :set relativenumber!<CR>

" Normal Mode Editing
:nnoremap <space> i<space><esc><right>
:nnoremap <cr> i<cr><esc><right>


" Scrolling
set scrolloff=3                 " Keep at least 3 lines above/below
set sidescrolloff=3             " Keep at least 3 lines left/right

" Cycle through buffers
nnoremap <silent> <Tab> :bnext<CR>
nnoremap <silent> <S-Tab> :bprevious<CR>

" windows
"nmap <silent> <Leader>wd <C-w>q

" Close current buffer
map <leader>q :bp<bar>sp<bar>bn<bar>bd<CR>

" using vim color schemes with putty
" http://vim.wikia.com/wiki/Using_vim_color_schemes_with_Putty
if &term =~ "xterm"
  " 256 colors
  let &t_Co = 256
  " restore screen after quitting
  let &t_ti = "\<Esc>7\<Esc>[r\<Esc>[?47h"
  let &t_te = "\<Esc>[?47l\<Esc>8"
  if has("terminfo")
    let &t_Sf = "\<Esc>[3%p1%dm"
    let &t_Sb = "\<Esc>[4%p1%dm"
  else
    let &t_Sf = "\<Esc>[3%dm"
    let &t_Sb = "\<Esc>[4%dm"
  endif
endif

" jellybeans color scheme
syntax enable
colorscheme jellybeans

" Tagbar
"nnoremap <F8> :TagbarToggle<CR>
"let g:tagbar_autofocus=0
"let g:tagbar_right=1
"let g:tagbar_width=35

" NERDTree
let g:NERDTreeIgnore=['\.job$', '^CVS$', '\.orig', '\~$']
let g:NERDTreeShowHidden=1
let g:NERDTreeStatusline="%f"
let g:NERDTreeWinPos="left"
let g:NERDTreeWinSize=35
nnoremap <F9> :NERDTreeFind<CR>
nnoremap <F10> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
"autocmd VimEnter * if !argc() | NERDTree | endif

" Airline
let g:airline_powerline_fonts=1
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h9
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#fnamemod=':t'

" Remember Position
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif
